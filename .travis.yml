language: cpp
dist: trusty

addons:
    apt:
        packages:
        - tclsh
        - pkg-config
        - cmake
        - libssl-dev
        - build-essential
    sonarcloud:
        organization: "haivision"
        token:
            secure: "T5pG0NFogkpJPm41ZuYPU6TMMX+THiXdazOl0JIJM88zV0iaD7/kw9UsTk8kTBjNXthiMWxzUbu/LT5ca82z7QZzKvC6rxEAttnzz+ImKvpEzMncXeGgEAziYZCuoN115spvlp/cr+hTVFO5tcldRtlCKzFAfnot59xganGHIu7sP9ohhk+CUtHFv5vsXJGXw2jpNBRHMO1lL6TZZj0rekti2Xqba8pPBn7xUU7iCqjrIK8pObQrWJUHbUWGMlp8F5OlMaIRa5IrS9z41rbdMBZidoVl6M6Y7b8xXzAsqbZDRVqExgk7bM+LquExKz37cLpAFEP4oQGwZVbkzEZvd+YsHVHv6qHZNpGWZjHJfi2uVW/YKnbIIQZJMu3i9oDUvxFEozZxKh8/vyLDDSy2S2CNH/YeKAjfw+NYqm5cNP+pM//l+1g6oizWmdEUUbkgG/ipaQsKWTQ+eHXjQDc6SuaxHcVbarmdm5H1FYvQ8+cy1/9aksswrfS2AVgOpijI7Grr78z3Mt/6cOyAHPS9cq3Y0khfBJkOqUiwsJzkEhE6l8N3tgOhH90uuSeD16kamoMqpIYObdkNjEsT3sEMG7LVd2WimHvAfZdDi5pTcfktIZAYoQ5gRHkCaP3f9YkKgVPeWzFp/gUZ7XYeOVjy8XZ/eQuRd3RdEdTdFt1K4NQ="
    homebrew:
        packages:
        - openssl

matrix:
    include:
        - os: linux
          env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS=-DENABLE_CODE_COVERAGE=ON
          - RUN_SONARCUBE=1
        - env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS=-DENABLE_LOGGING=OFF
        - os: linux
          env: BUILD_TYPE=Release
        - os: osx
          osx_image: xcode10.2
          env: BUILD_TYPE=Debug
        - os: osx
          osx_image: xcode10.2
          env: BUILD_TYPE=Release
        - os: linux
          compiler: x86_64-w64-mingw32-g++
          addons:
            apt:
              packages:
                - gcc-mingw-w64-base
                - binutils-mingw-w64-x86-64
                - gcc-mingw-w64-x86-64
                - gcc-mingw-w64
                - g++-mingw-w64-x86-64
          before_script:
            - git clone -b OpenSSL_1_1_1-stable https://github.com/openssl/openssl.git openssl
            - cd openssl
            - ./Configure --cross-compile-prefix=x86_64-w64-mingw32- mingw64
            - make
            - cd ..
          env: BUILD_TYPE=Release
script:
    - if [ "$TRAVIS_COMPILER" == "x86_64-w64-mingw32-g++" ]; then
        export CC="x86_64-w64-mingw32-gcc";
        export CXX="x86_64-w64-mingw32-g++";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON" -DUSE_OPENSSL_PC="OFF" -DOPENSSL_ROOT_DIR="$PWD/openssl" -DCMAKE_SYSTEM_NAME="Windows";
      elif [ "$TRAVIS_OS_NAME" == "linux" ]; then
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        export PKG_CONFIG_PATH=$(brew --prefix openssl)"/lib/pkgconfig";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      fi
    - echo "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG"
    - echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
    - if [[ "$TRAVIS_REPO_SLUG" != "Haivision/srt" || "$TRAVIS_PULL_REQUEST" -gt 0 ]]; then
        export RUN_SONARCUBE=0;
      fi
    - echo "RUN_SONARCUBE=$RUN_SONARCUBE"
    - if (( "$RUN_SONARCUBE" )); then
        build-wrapper-linux-x86-64 --out-dir bw-output make;
      else
        make;
      fi
    - if [ "$TRAVIS_COMPILER" != "x86_64-w64-mingw32-g++" ]; then ctest --extra-verbose; fi
    - if (( "$RUN_SONARCUBE" )); then source ./scripts/collect-gcov.sh; fi
    - if (( "$RUN_SONARCUBE" )); then sonar-scanner -D"sonar.cfamily.gcov.reportPath=."; fi
