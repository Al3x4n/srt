language: cpp
dist: trusty

addons:
    apt:
        packages:
        - tclsh
        - pkg-config
        - cmake
        - libssl-dev
        - build-essential
    sonarcloud:
        organization: "haivision"
        token:
            secure: "MehZwBPkVL8Fp856VQiVa0Ao9srTCGAsR1iCSZKgK2/HFbB2tEYyjbd0C0UiNVl4BZZ4BL7AednBC5Jnu82hy0F4Bv0TlzH6H+CM6VJ6K9UFgU8EPtQhwzIRQNA2zQ2NYHcWvu83+Cs5U7tA7bBepygs7hZSpVd4+hRsHl1imhixgVMWuKWknNTficLi7YHSdrG8u8PgYQ5/ihsFgOR35iokD+JOt6s9tArXgn8kXaxpugjEQzI7AuRqlfPMpy+g8zQEs0j0qRrvp3lUIPxqsbUeCpuGFforvdeqwLY0orTVtISKGpimbzD/PG9XpI7MXiBiy8qMiXJ0UxyDKyup9s9HrPN0Hy8uwM+mgmoYS9hs8RKXcEpIqO4Xiqq0Mkt/MYclozhKMu18hY9O1uDLTWMWIKrQucYXC5Rtn3uD01n6oxRd9vieXi8UvglkvptGa92fM6Uhe92mFDL+C5LYoxBSc3vplSMJXGNwLhBDJO4Syl2nfdS4mWmbPuxbrbvB7vEqBEC8MkYwf87eZfhII6Y9EKEvtIwvLcuHAfE1ebDovQe0VtYOgSZEQIOkdHURYXlu7RCF0SbL8UUhA+FiajLowQnR4sh+UFHg1JNfEfbZXFIx9S1+ld4XFV0+VkcAw2EWGHEmLcohqhDUBFxMPhmGP4hOsyaXLS9L8Ysnows="
    homebrew:
        packages:
        - openssl

matrix:
    include:
        - os: linux
          env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS=-DENABLE_CODE_COVERAGE=ON
          - RUN_SONARCUBE=1
        - env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS=-DENABLE_LOGGING=OFF
        - os: linux
          env: BUILD_TYPE=Release
        - os: osx
          osx_image: xcode10.2
          env: BUILD_TYPE=Debug
        - os: osx
          osx_image: xcode10.2
          env: BUILD_TYPE=Release
        - os: linux
          compiler: x86_64-w64-mingw32-g++
          addons:
            apt:
              packages:
                - gcc-mingw-w64-base
                - binutils-mingw-w64-x86-64
                - gcc-mingw-w64-x86-64
                - gcc-mingw-w64
                - g++-mingw-w64-x86-64
          before_script:
            - git clone -b OpenSSL_1_1_1-stable https://github.com/openssl/openssl.git openssl
            - cd openssl
            - ./Configure --cross-compile-prefix=x86_64-w64-mingw32- mingw64
            - make
            - cd ..
          env: BUILD_TYPE=Release
script:
    - if [ "$TRAVIS_COMPILER" == "x86_64-w64-mingw32-g++" ]; then
        export CC="x86_64-w64-mingw32-gcc";
        export CXX="x86_64-w64-mingw32-g++";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON" -DUSE_OPENSSL_PC="OFF" -DOPENSSL_ROOT_DIR="$PWD/openssl" -DCMAKE_SYSTEM_NAME="Windows";
      elif [ "$TRAVIS_OS_NAME" == "linux" ]; then
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        export PKG_CONFIG_PATH=$(brew --prefix openssl)"/lib/pkgconfig";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      fi
    - echo "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG"
    - echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
    - if [[ "$TRAVIS_REPO_SLUG" != "Haivisio/srt" || "$TRAVIS_PULL_REQUEST" -gt 0 ]]; then
        export RUN_SONARCUBE=0;
      fi
    - echo "RUN_SONARCUBE=$RUN_SONARCUBE"
    - if (( "$RUN_SONARCUBE" )); then
        build-wrapper-linux-x86-64 --out-dir bw-output make;
      else
        make;
      fi
    - if [ "$TRAVIS_COMPILER" != "x86_64-w64-mingw32-g++" ]; then ctest --extra-verbose; fi
    - if (( "$RUN_SONARCUBE" )); then source ./scripts/collect-gcov.sh; fi
    - if (( "$RUN_SONARCUBE" )); then sonar-scanner -D"sonar.cfamily.gcov.reportPath=."; fi
